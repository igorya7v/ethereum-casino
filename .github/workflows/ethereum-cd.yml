# This workflow will Setup Node.js environment, 
# install node dependencies, 
# compile the Ethereum Smart Contracts source code,
# run the unit tests,
# and do a deployment to Ethereum Testnet. 

name: Ethereum Contract CD

on:
  release:
    types: [created]

jobs:
  deploy:
  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-  
    
    - name: Setup Node.js environemt
      uses: actions/setup-node@v2
    
    # TODO: use cache for dependencies
    - name: Install dependencies
      working-directory: ./
      run: npm install
    
    - name: Install Truffle
      run: npm install truffle
    
    - name: Compile Smart Contracts
      run: npm run compile
      
    - name: Run Unit Tests
      run: npm run compile
      
    - name: Deploy to Testnet
      env:
        MNEMONIC: ${{ secrets.MNEMONIC }}
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
      run: npm run deploy
